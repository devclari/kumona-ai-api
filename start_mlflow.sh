#!/bin/bash

# Script para inicializar a API com MLFlow
# Uso: ./start_mlflow.sh

set -e

echo "üöÄ Iniciando Eye Disease Classifier API com MLFlow"
echo "=================================================="

# Verificar se Docker est√° instalado
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker n√£o est√° instalado. Por favor, instale o Docker primeiro."
    exit 1
fi

# Verificar se Docker Compose est√° instalado
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose n√£o est√° instalado. Por favor, instale o Docker Compose primeiro."
    exit 1
fi

# Criar diret√≥rios necess√°rios
echo "üìÅ Criando diret√≥rios..."
mkdir -p mlruns
mkdir -p mlflow_artifacts
mkdir -p logs

# Definir permiss√µes
chmod 755 mlruns mlflow_artifacts logs

# Parar containers existentes (se houver)
echo "üõë Parando containers existentes..."
docker-compose down --remove-orphans 2>/dev/null || true

# Construir e iniciar servi√ßos
echo "üî® Construindo e iniciando servi√ßos..."
docker-compose up -d --build

# Aguardar servi√ßos ficarem prontos
echo "‚è≥ Aguardando servi√ßos ficarem prontos..."

# Fun√ß√£o para verificar se um servi√ßo est√° pronto
check_service() {
    local url=$1
    local service_name=$2
    local max_attempts=30
    local attempt=1
    
    while [ $attempt -le $max_attempts ]; do
        if curl -s -f "$url" > /dev/null 2>&1; then
            echo "‚úÖ $service_name est√° pronto!"
            return 0
        fi
        
        echo "   Tentativa $attempt/$max_attempts - Aguardando $service_name..."
        sleep 2
        attempt=$((attempt + 1))
    done
    
    echo "‚ùå $service_name n√£o ficou pronto ap√≥s $max_attempts tentativas"
    return 1
}

# Verificar MLFlow
if ! check_service "http://localhost:5000/health" "MLFlow"; then
    echo "‚ùå MLFlow n√£o est√° respondendo. Verificando logs..."
    docker-compose logs mlflow
    exit 1
fi

# Verificar API
if ! check_service "http://localhost:8080/health" "API"; then
    echo "‚ùå API n√£o est√° respondendo. Verificando logs..."
    docker-compose logs api
    exit 1
fi

echo ""
echo "üéâ Todos os servi√ßos est√£o prontos!"
echo ""
echo "üåê Acesse:"
echo "   API: http://localhost:8080"
echo "   API Docs: http://localhost:8080/docs"
echo "   MLFlow UI: http://localhost:5000"
echo "   Health Check: http://localhost:8080/health"
echo ""
echo "üìä Para testar a integra√ß√£o:"
echo "   python test_mlflow_integration.py"
echo ""
echo "üìã Para ver logs:"
echo "   docker-compose logs -f"
echo ""
echo "üõë Para parar:"
echo "   docker-compose down"
echo ""
echo "‚úÖ Setup completo!"
